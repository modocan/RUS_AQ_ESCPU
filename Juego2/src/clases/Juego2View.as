/** * Created with IntelliJ IDEA. * User: rubenmorato * Date: 20/09/12 * Time: 12:49 * To change this template use File | Settings | File Templates. */package clases{	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import Box2D.Dynamics.*;	import Box2D.Collision.*;	import Box2D.Collision.Shapes.*;	import Box2D.Common.Math.*;	import Box2D.Dynamics.Joints.*;	public class Juego2View extends Sprite	{		private var _this:Juego2View;		public var _fondo:FondoPajas_mc;		private var _area_mc:Area_mc;		private var _pajas:Array = new Array();		public var m_world:b2World;        public var m_iterations:int = 10;        public var m_timeStep:Number = 1/50;		public var pixels_in_a_meter = 30;		public var mousePVec:b2Vec2 = new b2Vec2();		public var real_x_mouse:Number;		public var real_y_mouse:Number;        public var ropa:Array = new Array();		public var worldAABB:b2AABB = new b2AABB();		public var gravity:b2Vec2 = new b2Vec2(0.0,40.0);		public var mouseJoint:b2MouseJoint;        private var personaje:Muneco_mc;		private var ancho_suelo = 26.6;		private var alto_suelo = 0.1;		private var ancho_pared = 0.1;		private var alto_pared = 19.8;		private var ancho_techo = 26.6;		private var alto_techo = 0.1;		public function Juego2View()		{			_this = this;			_this.addEventListener(Event.ADDED_TO_STAGE, config);		}		private function config(e:Event)		{			_this.removeEventListener(Event.ADDED_TO_STAGE, config);			_fondo = new FondoPajas_mc();            _fondo.name = 'fondo_mc';			_fondo.x = 0;			_fondo.y = 0;			_this.addChild(_fondo);            personaje = new Muneco_mc();            var perX:Number = -300;            var perY:Number = 320;            personaje.config('1', perX, perY);            personaje.vestirTodosLosMunecos(_this.ropa, ['personajeRespirando']);            //personaje.vestirMuneco(_this.ropa[5], 'personaje_mc');            personaje.scaleX = personaje.scaleY = 0.8;            personaje.respirando();            personaje.buttonMode = false;            addChild(personaje);			_area_mc = new Area_mc();			_area_mc.x = -300;			_area_mc.y = 70;			_this.addChild(_area_mc);			initBox2d();		}		private function initBox2d()		{			addEventListener(Event.ENTER_FRAME, Update, false, 0, true);			stage.addEventListener(MouseEvent.MOUSE_DOWN, on_mouse_down);			stage.addEventListener(MouseEvent.MOUSE_UP, on_mouse_up);			worldAABB.lowerBound.Set(-100.0, -100.0);			worldAABB.upperBound.Set(100.0, 100.0);			m_world = new b2World(worldAABB,gravity,true);			var m_contactListener=new b2ContactListener();			m_world.SetContactListener(m_contactListener);			var body:b2Body;			var bodyDef:b2BodyDef;			var boxDef:b2PolygonDef;            var debug_draw:b2DebugDraw = new b2DebugDraw();            var debug_sprite:Sprite = new Sprite();            addChild(debug_sprite);            debug_draw.m_sprite=debug_sprite;            debug_draw.m_drawScale=30;            debug_draw.m_fillAlpha=0.5;            debug_draw.m_lineThickness=1;            debug_draw.m_drawFlags=b2DebugDraw.e_shapeBit;            //m_world.SetDebugDraw(debug_draw);			//////// SUELO /////////			bodyDef = new b2BodyDef();			bodyDef.position.Set(0, 500/30);			boxDef = new b2PolygonDef();			boxDef.SetAsBox(ancho_suelo, alto_suelo);			boxDef.friction = 1;			boxDef.density = 0;			bodyDef.userData = new suelo();			body = m_world.CreateBody(bodyDef);			body.CreateShape(boxDef);			body.SetMassFromShapes();			/////////////////////////////			//////// PARED IZQ /////////			bodyDef = new b2BodyDef();			bodyDef.position.Set(-26.8, 0);			boxDef = new b2PolygonDef();			boxDef.SetAsBox(ancho_pared, alto_pared);			boxDef.friction = 1;			boxDef.density = 0;			bodyDef.userData = new suelo();			body = m_world.CreateBody(bodyDef);			body.CreateShape(boxDef);			body.SetMassFromShapes();			/////////////////////////////			//////// PARED DERCH /////////			bodyDef = new b2BodyDef();			bodyDef.position.Set(26.8, 0);			boxDef = new b2PolygonDef();			boxDef.SetAsBox(ancho_pared, alto_pared);			boxDef.friction = 1;			boxDef.density = 0;			bodyDef.userData = new suelo();			body = m_world.CreateBody(bodyDef);			body.CreateShape(boxDef);			body.SetMassFromShapes();			/////////////////////////////			//////// TECHO /////////			bodyDef = new b2BodyDef();			bodyDef.position.Set(0, -19.8);			boxDef = new b2PolygonDef();			boxDef.SetAsBox(ancho_techo, alto_techo);			boxDef.friction = 1;			boxDef.density = 0;			bodyDef.userData = new suelo();			body = m_world.CreateBody(bodyDef);			body.CreateShape(boxDef);			body.SetMassFromShapes();			/////////////////////////////			//////// CARRO /////////			bodyDef = new b2BodyDef();			bodyDef.position.Set(-10, 14.5);			var ancho_carro:Number = 118.7/65;			var alto_carro:Number = 87.45/65;			boxDef = new b2PolygonDef();			boxDef.SetAsBox(ancho_carro, alto_carro);			boxDef.density = 0;			boxDef.friction = 1;			//boxDef.restitution = 0.2;			bodyDef.userData = new Carro();			bodyDef.userData.width = ancho_carro * 2 * pixels_in_a_meter + 20;			bodyDef.userData.height = alto_carro * 2 * pixels_in_a_meter + 45;			bodyDef.userData.name = "Carro";			body = m_world.CreateBody(bodyDef);			body.CreateShape(boxDef);			body.SetMassFromShapes();			addChild(bodyDef.userData);			/////////////////////////			// Número de pajas 1			for (var i:int = 1; i <=5; i++)			{                var ancho_paja:Number = 53/30;                var alto_paja:Number = 33/30;				bodyDef = new b2BodyDef();				bodyDef.position.x = Math.random() * 15 + 1;				bodyDef.position.y = 395/30;				boxDef = new b2PolygonDef();				boxDef.SetAsBox(ancho_paja-0.05, alto_paja-0.05);				boxDef.density = 600000;				boxDef.friction = 1;				boxDef.restitution = 0;				bodyDef.userData = new Pajas1();				bodyDef.userData.width = ancho_paja * 2 * pixels_in_a_meter;				bodyDef.userData.height = alto_paja * 2 * pixels_in_a_meter;				bodyDef.userData.name = "paja";				//_pajas.push("Paja "+i);				body = m_world.CreateBody(bodyDef);				body.CreateShape(boxDef);				body.SetMassFromShapes();				addChild(bodyDef.userData);			}            // Número de pajas 2            for (var j:int = 1; j <=5; j++)            {                var ancho_paja2:Number = 50.05/30;                var alto_paja2:Number = 38.55/30;                bodyDef = new b2BodyDef();                bodyDef.position.x = Math.random() * 15 + 1;                bodyDef.position.y = 420/30;                boxDef = new b2PolygonDef();                boxDef.SetAsBox(ancho_paja2-0.05, alto_paja2-0.05);                boxDef.density = 600000;                boxDef.friction = 1;                boxDef.restitution = 0;                bodyDef.userData = new Pajas2();                bodyDef.userData.width = ancho_paja2 * 2 * pixels_in_a_meter;                bodyDef.userData.height = alto_paja2 * 2 * pixels_in_a_meter;                bodyDef.userData.name = "paja";                body = m_world.CreateBody(bodyDef);                body.CreateShape(boxDef);                body.SetMassFromShapes();                addChild(bodyDef.userData);            }		}		// Animación		public function Update(e:Event):void		{			m_world.Step(m_timeStep, m_iterations);			if (mouseJoint)			{				var mouseXWorldPhys = mouseX/pixels_in_a_meter;				var mouseYWorldPhys = mouseY/pixels_in_a_meter;				var p2:b2Vec2 = new b2Vec2(mouseXWorldPhys,mouseYWorldPhys);				mouseJoint.SetTarget(p2);			}			for (var bb:b2Body = m_world.m_bodyList; bb; bb = bb.m_next)			{				if (bb.m_userData is Sprite)				{					bb.m_userData.x = bb.GetPosition().x * pixels_in_a_meter;                    bb.m_userData.y = bb.GetPosition().y * pixels_in_a_meter;					bb.m_userData.rotation = (bb.GetAngle() * (180 / Math.PI));					if (_area_mc.hitTestObject(Sprite(bb.m_userData)) == true && bb.m_userData.name == 'paja')					{						bb.m_userData.name = 'paja_premio';                        this.dispatchEvent(new Juego2Event(Juego2Event.PUNTO));					}					else if (_area_mc.hitTestObject(Sprite(bb.m_userData)) == false && bb.m_userData.name == 'paja_premio')					{						bb.m_userData.name = 'paja';                        this.dispatchEvent(new Juego2Event(Juego2Event.QUITAR_PUNTO));					}				}			}		}		// RollDown		public function on_mouse_down(evt:MouseEvent):void		{			var body:b2Body = GetBodyAtMouse();			if (body)			{				var mouse_joint:b2MouseJointDef = new b2MouseJointDef;				mouse_joint.body1 = m_world.GetGroundBody();				mouse_joint.body2 = body;				mouse_joint.target.Set(mouseX/pixels_in_a_meter, mouseY/pixels_in_a_meter);				mouse_joint.maxForce = 10000000000;				mouse_joint.timeStep = m_timeStep;				mouseJoint = m_world.CreateJoint(mouse_joint) as b2MouseJoint;			}		}		// RollOver		public function on_mouse_up(evt:MouseEvent):void		{			if (mouseJoint)			{				m_world.DestroyJoint(mouseJoint);				mouseJoint = null;			}		}		public function GetBodyAtMouse(includeStatic:Boolean=false):b2Body		{			real_x_mouse = (_this.mouseX)/pixels_in_a_meter;			real_y_mouse = (_this.mouseY)/pixels_in_a_meter;			mousePVec.Set(real_x_mouse, real_y_mouse);			var aabb:b2AABB = new b2AABB();            aabb.lowerBound.Set(real_x_mouse - 0.001, real_y_mouse - 0.001);            aabb.upperBound.Set(real_x_mouse + 0.001, real_y_mouse + 0.001);			var k_maxCount:int = 10;			var shapes:Array = new Array();			var count:int = m_world.Query(aabb,shapes,k_maxCount);			var body:b2Body = null;			for (var i:int = 0; i < count; ++i)			{				if (shapes[i].m_body.IsStatic() == false || includeStatic)				{					var tShape:b2Shape = shapes[i] as b2Shape;					var inside:Boolean = tShape.TestPoint(tShape.m_body.GetXForm(),mousePVec);					if (inside)					{						body = tShape.m_body;						break;					}				}			}			return body;		}        // FINAL DEL JUEGO        public function finJuego():void{            trace('parar todo!');            removeEventListener(Event.ENTER_FRAME, Update);        }	}}